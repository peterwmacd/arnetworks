% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Predict.R
\name{predictTransitivity}
\alias{predictTransitivity}
\title{Prediction for autoregressive network models with transitivity}
\usage{
predictTransitivity(estimates, Xnew, Unew = NULL, Vnew = NULL, nStep = 1)
}
\arguments{
\item{estimates}{A list of parameter estimates from \code{estTransitivity}.}

\item{Xnew}{A \eqn{p \times p} matrix of the network's current adjacency matrix from which to
perform prediction}

\item{Unew}{A \eqn{p \times p \times 1} array or \eqn{p \times p } matrix of the normalized number of
common neighbour statistics for the current snapshot. If not provided, it will be calculated internally from \code{Xnew}.}

\item{Vnew}{A \eqn{p \times p \times 1} array or \eqn{p \times p } matrix of the normalized number of
disjoint neighbour statistics for the current snapshot. If not provided, it will be calculated internally from \code{Xnew}.}

\item{nStep}{A positive integer, the number of steps to recursively predict with the model.}
}
\value{
A \eqn{p \times p} matrix (if \code{nStep=1}) or a \eqn{p \times p \times} \code{nStep} array,
the predicted edge probabilites for the next \code{nStep} network snapshots.
}
\description{
This function recursively predicts the edge probabilities of future snapshots of a sequence of
dynamic networks based on a model
fit using \code{estTransitivity}.
}
\examples{
p = 30; n = 20
xi = rep(0.7, p); eta = rep(0.8, p)
a = 30; b = 15

# Simulate data using simulate_transitivity function
simulated_data = simulate_transitivity(p, n, xi, eta, a, b)
X = simulated_data$X
U = simulated_data$U
V = simulated_data$V

# Fit model using estTransitivity function
result = estTransitivity(X, U, V)

# Predict the next 2 snapshots using predictTransitivity
pred = predictTransitivity(result,X[,,n],nStep=2)

}
