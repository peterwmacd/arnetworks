% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EstTransitivity.R
\name{estTransitivity}
\alias{estTransitivity}
\title{Estimation for Autoregressive Networks with Transitivity}
\usage{
estTransitivity(
  X,
  U = NULL,
  V = NULL,
  rSeqGlob = c(0.5, 0.1),
  rSeqLoc = c(0.5, 0.1),
  verbose = FALSE
)
}
\arguments{
\item{X}{A \eqn{p \times p \times n} array of network's adjacency matrices over time.}

\item{U}{A \eqn{p \times p \times n} or \eqn{p \times p \times (n-1)} array of the normalized number of
common neighbour statistics. If a \eqn{p \times p \times n} array is provided, the \code{n}th slice is
ignored in the likelihood calculations. If not provided, it will be calculated internally from \code{X}.}

\item{V}{A \eqn{p \times p \times n} or \eqn{p \times p \times (n-1)} array of the normalized number of
disjoint neighbour statistics. If a \eqn{p \times p \times n} array is provided, the \code{n}th slice is
ignored in the likelihood calculations. If not provided, it will be calculated internally from \code{X}.}

\item{rSeqGlob}{The sequence of control parameters for the refinement of global parameters. Defaults
to \code{c(0.5,0.1)}. Note that \code{rSeqGlob} and \code{rSeqLoc} must have the same length.}

\item{rSeqLoc}{The sequence of control parameters for the refinement of local parameters. Defaults
to \code{c(0.5,0.1)}.}

\item{verbose}{An indicator, if \code{TRUE} there will be printed console output providing optimization
progress. defaults to \code{FALSE}.}
}
\value{
A list containing the estimated parameters:
\itemize{
\item \code{gVal}: Estimated global parameters \eqn{a, b}.
\item \code{xi}: Estimated values of \eqn{\xi_1, \dots, \xi_p}.
\item \code{eta}: Estimated values of \eqn{\eta_1, \dots, \eta_p}.
}
}
\description{
This function estimates the parameters of an autoregressive network model with transitivity
effects. The method performs local and global likelihood estimation, then applies a
refinement procedure to each parameter estimate.
}
\details{
This autoregressive network model contains a total of \eqn{2 + 2p} parameters.
The global parameters \eqn{a} and \eqn{b} are shared between the
formation and dissolution models, and control the influence of transitivity on the edge variables through the number of common neighbours and
disjoint neighbours in the previous snapshot.
The local parameters \eqn{\{\xi_i\}} and \eqn{\{\eta_i\}} control the node-specific propensity to form or dissolve edges, respectively.

Edge probabilities are modeled as
\deqn{\alpha_{i,j}^{t-1} = \frac{\xi_i \xi_j \exp(a U_{i,j}^{t-1})}{1 + \exp(a U_{i,j}^{t-1}) + \exp(b V_{i,j}^{t-1})}}
\deqn{\beta_{i,j}^{t-1} = \frac{\eta_i \eta_j \exp(b V_{i,j}^{t-1})}{1 + \exp(a U_{i,j}^{t-1}) + \exp(b V_{i,j}^{t-1})}}
where
\deqn{U^{t-1}_{i,j} = \frac{1}{p-2} \sum_k X_{i,k}^{t-1} X_{k,j}^{t-1}}
is the normalized number of common neighbours of nodes \eqn{i} and \eqn{j} in snapshot \eqn{t-1}, and
\deqn{V^{t-1}_{i,j} = \frac{1}{p-2} \sum_k \{ X_{i,k}^{t-1}(1 - X_{k,j}^{t-1}) +  (1 - X_{i,k}^{t-1})X_{k,j}^{t-1} \}}
is the normalized number of disjoint neighbours of nodes \eqn{i} and \eqn{j} in snapshot \eqn{t-1}.

Estimation Procedure:
\enumerate{
\item \strong{Initialization}: automatic initialization of global parameters.
\item \strong{Local Optimization}: With global parameters set to their initial values, local
log-likelihood functions are maximized through a Newton method to update local parameter estimates.
\item \strong{Global Optimization}: With local parameters estimated in the previous stage, a global
log-likelihood function is maximized through a Newton method to
estimate global parameters.
\item \strong{Refinement}: For a prespecified number of iterations, global and local parameters estimates
are refined by maximizing a linear restriction of the local or global likelihood functions.
}
}
\examples{
p = 30; n = 20
xi = rep(0.7, p); eta = rep(0.8, p)
a = 30; b = 15

# Simulate data using simulate_transitivity function
simulated_data = simulate_transitivity(p, n, xi, eta, a, b)
X = simulated_data$X
U = simulated_data$U
V = simulated_data$V

result = estTransitivity(X, U, V)

}
