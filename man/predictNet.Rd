% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Predict.R
\name{predictNet}
\alias{predictNet}
\title{Prediction for general autoregressive network models}
\usage{
predictNet(estimates, Xnew, statsAlphaNew, statsBetaNew, fij, gij)
}
\arguments{
\item{estimates}{A list of parameter estimates from \code{estNet}.}

\item{Xnew}{A \eqn{p \times p} matrix of the network's current adjacency matrix from which to
perform one step prediction}

\item{statsAlphaNew}{A \eqn{p \times p \times 1 \times d} array, current snapshot sufficient statistics
input for \code{fij}.}

\item{statsBetaNew}{A \eqn{p \times p \times 1 \times d} array, current snapshot sufficient statistics
input for \code{gij}.}

\item{fij}{Function for global edge formation behaviour, dependent on the global parameters \eqn{\mathbf{\theta}_f} and sufficient statistics. See ‘Details’ for \code{estNet} documentation.}

\item{gij}{Function for global edge dissolution behaviour, dependent on the global parameters \eqn{\mathbf{\theta}_g} and sufficient statistics. See ‘Details’ for \code{estNet} documentation.}
}
\value{
A \eqn{p \times p} matrix, the predicted edge probabilites for the next network snapshot.
}
\description{
This function predicts the edge probabilities of the next snapshot of a sequence of
dynamic networks based on a model
fit using \code{estNet}.
}
\examples{
# Example with transitivity model.
p = 30; n = 20
xi = rep(0.7, p); eta = rep(0.8, p)
a = 30; b = 15

# Simulate data using simulate_transitivity function
simulated_data = simulate_transitivity(p, n, xi, eta, a, b)
X = simulated_data$X
U = simulated_data$U[, , 1:(n - 1)]
V = simulated_data$V[, , 1:(n - 1)]

statsAlpha = statsBeta = array(c(U, V), dim = c(p,p,n-1,2))

# Initialize global parameters for fij and gij
globInitAlpha = globInitBeta = rep(100, 2)

# Define edge formation and dissolution functions based on transitivity model
fij = function(global, stats) {
  exp(global[1] * stats[, , , 1,drop=FALSE]) /
  (1 + exp(global[1] * stats[, , , 1,drop=FALSE]) + exp(global[2] * stats[, , , 2,drop=FALSE]))
}
gij = function(global, stats) {
  exp(global[2] * stats[, , , 2,drop=FALSE]) /
  (1 + exp(global[1] * stats[, , , 1,drop=FALSE]) + exp(global[2] * stats[, , , 2,drop=FALSE]))
}

result = estNet(X, fij, gij, statsAlpha, statsBeta, globInitAlpha, globInitBeta,
                shrGPrm = 2)

Xnew = X[,,n]
statsAlphaNew = statsBetaNew = array(c(U[,,n],V[,,n]),c(p,p,1,2))
pred = predictNet(result,Xnew,statsAlphaNew,statsBetaNew,fij,gij)

}
